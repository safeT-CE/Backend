plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'  // Jackson은 JSON 처리를 위한 라이브러리입니다.

	// JWT Token
	implementation 'io.jsonwebtoken:jjwt:0.11.5'

	// JoinRequest에서 @NotBlack 사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Mysql
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.32'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// sms
	implementation 'net.nurigo:sdk:4.3.0'

	//
	implementation 'javax.xml.bind:jaxb-api:2.3.1'


	implementation 'org.springframework.boot:spring-boot-starter-security'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Apache Commons CSV
	implementation 'org.apache.commons:commons-csv:1.8'

	// AWS s3
	implementation 'software.amazon.awssdk:s3:2.20.14'
	//implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'

	// Scheduling
	implementation 'org.springframework.boot:spring-boot-starter-scheduling'
}

tasks.named('test') {
	useJUnitPlatform()
}

repositories {
	mavenCentral()
	// jcenter() // 경우에 따라 필요할 수 있음
}

// oauth2 과정에서 추가함
//tasks.withType(JavaCompile) {
//	options.compilerArgs << "-parameters"
//}
